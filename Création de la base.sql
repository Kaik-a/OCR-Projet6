-- MySQL Script generated by MySQL Workbench
-- Mon May 11 23:04:44 2020
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `ocpizza` ;

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `ocpizza` DEFAULT CHARACTER SET utf8 ;
USE `ocpizza` ;

-- -----------------------------------------------------
-- Table `ocpizza`.`product`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ocpizza`.`product` ;

CREATE TABLE IF NOT EXISTS `ocpizza`.`product` (
  `id` INT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `price` DECIMAL(4,2) NULL,
  PRIMARY KEY (`id`, `name`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ocpizza`.`ingredient`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ocpizza`.`ingredient` ;

CREATE TABLE IF NOT EXISTS `ocpizza`.`ingredient` (
  `id` INT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `unit_measure` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`, `name`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ocpizza`.`recipe`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ocpizza`.`recipe` ;

CREATE TABLE IF NOT EXISTS `ocpizza`.`recipe` (
  `id_product` INT NOT NULL,
  `id_ingredient` INT NOT NULL,
  `number` INT NOT NULL,
  INDEX `product_id_idx` (`id_product` ASC) VISIBLE,
  INDEX `fk_ingredient_id_idx` (`id_ingredient` ASC) VISIBLE,
  PRIMARY KEY (`id_product`, `id_ingredient`),
  CONSTRAINT `fk_recipe_product`
    FOREIGN KEY (`id_product`)
    REFERENCES `ocpizza`.`product` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_recipe_ingredient`
    FOREIGN KEY (`id_ingredient`)
    REFERENCES `ocpizza`.`ingredient` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ocpizza`.`address`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ocpizza`.`address` ;

CREATE TABLE IF NOT EXISTS `ocpizza`.`address` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `number` INT NULL,
  `address` VARCHAR(100) NULL,
  `address2` VARCHAR(100) NULL,
  `postal_code` VARCHAR(45) NULL,
  `city` VARCHAR(45) NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_address_UNIQUE` (`id` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ocpizza`.`contact`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ocpizza`.`contact` ;

CREATE TABLE IF NOT EXISTS `ocpizza`.`contact` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `id_address` INT NULL,
  `phone_number` VARCHAR(10) NULL,
  `email` VARCHAR(100) NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_contact_UNIQUE` (`id` ASC) VISIBLE,
  INDEX `fk_address_idx` (`id_address` ASC) VISIBLE,
  CONSTRAINT `fk_contact_address`
    FOREIGN KEY (`id_address`)
    REFERENCES `ocpizza`.`address` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ocpizza`.`shop`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ocpizza`.`shop` ;

CREATE TABLE IF NOT EXISTS `ocpizza`.`shop` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `contact_id` INT NULL,
  PRIMARY KEY (`id`, `name`),
  UNIQUE INDEX `id_shop_UNIQUE` (`id` ASC) VISIBLE,
  INDEX `fk_shop_contact_idx` (`contact_id` ASC) VISIBLE,
  CONSTRAINT `fk_shop_contact`
    FOREIGN KEY (`contact_id`)
    REFERENCES `ocpizza`.`contact` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ocpizza`.`stock`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ocpizza`.`stock` ;

CREATE TABLE IF NOT EXISTS `ocpizza`.`stock` (
  `id` INT NOT NULL,
  `id_shop` INT NOT NULL,
  `type` VARCHAR(45) NOT NULL,
  `stock` INT NOT NULL,
  INDEX `fk_stock_shop_idx` (`id_shop` ASC) VISIBLE,
  CONSTRAINT `fk_stock_shop`
    FOREIGN KEY (`id_shop`)
    REFERENCES `ocpizza`.`shop` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ocpizza`.`account`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ocpizza`.`account` ;

CREATE TABLE IF NOT EXISTS `ocpizza`.`account` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `login` VARCHAR(45) NOT NULL,
  `password` BINARY(60) NULL,
  PRIMARY KEY (`id`, `login`),
  UNIQUE INDEX `login_UNIQUE` (`login` ASC) VISIBLE,
  UNIQUE INDEX `id_account_UNIQUE` (`id` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ocpizza`.`person`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ocpizza`.`person` ;

CREATE TABLE IF NOT EXISTS `ocpizza`.`person` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `first_name` VARCHAR(45) NULL,
  `last_name` VARCHAR(45) NULL,
  `account_id` INT NULL,
  `contact_id` INT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_person_account_idx` (`account_id` ASC) VISIBLE,
  INDEX `fk_person_contact_idx` (`contact_id` ASC) VISIBLE,
  CONSTRAINT `fk_person_account`
    FOREIGN KEY (`account_id`)
    REFERENCES `ocpizza`.`account` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_person_contact`
    FOREIGN KEY (`contact_id`)
    REFERENCES `ocpizza`.`contact` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
AUTO_INCREMENT = 1;


-- -----------------------------------------------------
-- Table `ocpizza`.`payment_status`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ocpizza`.`payment_status` ;

CREATE TABLE IF NOT EXISTS `ocpizza`.`payment_status` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`, `name`),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC) VISIBLE,
  UNIQUE INDEX `id_payment_status_UNIQUE` (`id` ASC) VISIBLE)
ENGINE = InnoDB
AUTO_INCREMENT = 1;


-- -----------------------------------------------------
-- Table `ocpizza`.`payment_type`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ocpizza`.`payment_type` ;

CREATE TABLE IF NOT EXISTS `ocpizza`.`payment_type` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`, `name`),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC) VISIBLE,
  UNIQUE INDEX `id_payment_type_UNIQUE` (`id` ASC) VISIBLE)
ENGINE = InnoDB
AUTO_INCREMENT = 1;


-- -----------------------------------------------------
-- Table `ocpizza`.`command_status`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ocpizza`.`command_status` ;

CREATE TABLE IF NOT EXISTS `ocpizza`.`command_status` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`, `name`),
  UNIQUE INDEX `id_command_status_UNIQUE` (`id` ASC) VISIBLE,
  UNIQUE INDEX `name_UNIQUE` (`name` ASC) VISIBLE)
ENGINE = InnoDB
AUTO_INCREMENT = 1;


-- -----------------------------------------------------
-- Table `ocpizza`.`retrievement_type`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ocpizza`.`retrievement_type` ;

CREATE TABLE IF NOT EXISTS `ocpizza`.`retrievement_type` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`, `name`),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC) VISIBLE,
  UNIQUE INDEX `id_retrievement_type_UNIQUE` (`id` ASC) VISIBLE)
ENGINE = InnoDB
AUTO_INCREMENT = 1;


-- -----------------------------------------------------
-- Table `ocpizza`.`command`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ocpizza`.`command` ;

CREATE TABLE IF NOT EXISTS `ocpizza`.`command` (
  `id` INT NOT NULL,
  `id_person` INT NULL,
  `id_shop` INT NULL,
  `id_status` INT NULL,
  `id_payment_status` INT NULL,
  `id_payment_type` INT NULL,
  `id_retrievement_type` INT NULL,
  `address` VARCHAR(45) NULL,
  `date` DATETIME NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_person_idx` (`id_person` ASC) VISIBLE,
  INDEX `fk_shop_idx` (`id_shop` ASC) VISIBLE,
  INDEX `fk_payment_status_idx` (`id_payment_status` ASC) VISIBLE,
  INDEX `fk_payment_type_idx` (`id_payment_type` ASC) VISIBLE,
  INDEX `fk_command_status_idx` (`id_status` ASC) VISIBLE,
  INDEX `fk_retrievement_type_idx` (`id_retrievement_type` ASC) VISIBLE,
  CONSTRAINT `fk_command_person`
    FOREIGN KEY (`id_person`)
    REFERENCES `ocpizza`.`person` (`id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE,
  CONSTRAINT `fk_command_shop`
    FOREIGN KEY (`id_shop`)
    REFERENCES `ocpizza`.`shop` (`id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `fk_command_payment_status`
    FOREIGN KEY (`id_payment_status`)
    REFERENCES `ocpizza`.`payment_status` (`id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `fk_command_payment_type`
    FOREIGN KEY (`id_payment_type`)
    REFERENCES `ocpizza`.`payment_type` (`id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `fk_command_command_status`
    FOREIGN KEY (`id_status`)
    REFERENCES `ocpizza`.`command_status` (`id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `fk_command_retrievement_type`
    FOREIGN KEY (`id_retrievement_type`)
    REFERENCES `ocpizza`.`retrievement_type` (`id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ocpizza`.`command_composition`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ocpizza`.`command_composition` ;

CREATE TABLE IF NOT EXISTS `ocpizza`.`command_composition` (
  `id_command` INT NOT NULL,
  `id_product` INT NOT NULL,
  `number` INT NOT NULL,
  `price` DECIMAL(4,2) NOT NULL,
  PRIMARY KEY (`id_command`, `id_product`),
  INDEX `fk_product_idx` (`id_product` ASC) VISIBLE,
  CONSTRAINT `fk_command`
    FOREIGN KEY (`id_command`)
    REFERENCES `ocpizza`.`command` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_command_product`
    FOREIGN KEY (`id_product`)
    REFERENCES `ocpizza`.`product` (`id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ocpizza`.`rank`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ocpizza`.`rank` ;

CREATE TABLE IF NOT EXISTS `ocpizza`.`rank` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`, `name`),
  UNIQUE INDEX `id_rank_UNIQUE` (`id` ASC) VISIBLE,
  UNIQUE INDEX `name_UNIQUE` (`name` ASC) VISIBLE)
ENGINE = InnoDB
AUTO_INCREMENT = 1;


-- -----------------------------------------------------
-- Table `ocpizza`.`employee`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ocpizza`.`employee` ;

CREATE TABLE IF NOT EXISTS `ocpizza`.`employee` (
  `id_person` INT NOT NULL,
  `id_store` INT NULL,
  `id_rank` INT NULL,
  INDEX `fk_person_idx` (`id_person` ASC) VISIBLE,
  INDEX `fk_shop_idx` (`id_store` ASC) VISIBLE,
  INDEX `fk_employee_rank_idx` (`id_rank` ASC) VISIBLE,
  CONSTRAINT `fk_employee_person`
    FOREIGN KEY (`id_person`)
    REFERENCES `ocpizza`.`person` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_employee_shop`
    FOREIGN KEY (`id_store`)
    REFERENCES `ocpizza`.`shop` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_employee_rank`
    FOREIGN KEY (`id_rank`)
    REFERENCES `ocpizza`.`rank` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

USE `ocpizza` ;

-- -----------------------------------------------------
-- Placeholder table for view `ocpizza`.`stock_by_shop`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ocpizza`.`stock_by_shop` (`shop` INT, `name` INT, `stock` INT);

-- -----------------------------------------------------
-- Placeholder table for view `ocpizza`.`recipe_by_pizza`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ocpizza`.`recipe_by_pizza` (`pizza` INT, `ingredient` INT, `quantity` INT);

-- -----------------------------------------------------
-- Placeholder table for view `ocpizza`.`command_by_status`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ocpizza`.`command_by_status` (`id` INT, `name` INT, `date` INT);

-- -----------------------------------------------------
-- Placeholder table for view `ocpizza`.`command_by_shop`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ocpizza`.`command_by_shop` (`command_id` INT, `shop` INT, `name` INT, `date` INT);

-- -----------------------------------------------------
-- Placeholder table for view `ocpizza`.`pizza_by_shop`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ocpizza`.`pizza_by_shop` (`pizza` INT, `max` INT, `shop` INT);

-- -----------------------------------------------------
-- Placeholder table for view `ocpizza`.`sales_by_shop`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ocpizza`.`sales_by_shop` (`name` INT, `SUM(price)` INT);

-- -----------------------------------------------------
-- View `ocpizza`.`stock_by_shop`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ocpizza`.`stock_by_shop`;
DROP VIEW IF EXISTS `ocpizza`.`stock_by_shop` ;
USE `ocpizza`;
CREATE  OR REPLACE VIEW `stock_by_shop`
AS 
SELECT 
	sh.name AS shop,
    CASE st.type
		WHEN 'ingredient' THEN (Select name from ingredient as i where i.id = st.id )
		WHEN 'product' THEN (SELECT name from product as i where i.id = st.id)
	END AS name,
    st.stock
FROM shop AS sh
INNER JOIN stock AS st
ON sh.id = st.id_shop 
ORDER BY sh.name;

-- -----------------------------------------------------
-- View `ocpizza`.`recipe_by_pizza`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ocpizza`.`recipe_by_pizza`;
DROP VIEW IF EXISTS `ocpizza`.`recipe_by_pizza` ;
USE `ocpizza`;
CREATE  OR REPLACE VIEW `recipe_by_pizza` AS

SELECT
	p.name as pizza,
    i.name as ingredient,
    CONCAT(r.number, i.unit_measure) as quantity
FROM product as p 
INNER JOIN recipe as r 
ON p.id = r.id_product
INNER JOIN ingredient as i
ON r.id_ingredient = i.id
ORDER BY p.name;

-- -----------------------------------------------------
-- View `ocpizza`.`command_by_status`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ocpizza`.`command_by_status`;
DROP VIEW IF EXISTS `ocpizza`.`command_by_status` ;
USE `ocpizza`;
CREATE  OR REPLACE VIEW `command_by_status` AS

SELECT 
	c.id,
    cs.name, 
    c.date
FROM command as c
INNER JOIN command_status cs
ON c.id_status = cs.id;

-- -----------------------------------------------------
-- View `ocpizza`.`command_by_shop`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ocpizza`.`command_by_shop`;
DROP VIEW IF EXISTS `ocpizza`.`command_by_shop` ;
USE `ocpizza`;
CREATE  OR REPLACE VIEW `command_by_shop` AS

SELECT
	c.id as command_id,
    sh.name as shop, 
    cs.name,
    c.date
FROM command as c
INNER JOIN shop as sh
ON c.id_shop = sh.id
INNER JOIN command_status as cs
ON c.id_status = cs.id
ORDER BY sh.name, c.date;

-- -----------------------------------------------------
-- View `ocpizza`.`pizza_by_shop`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ocpizza`.`pizza_by_shop`;
DROP VIEW IF EXISTS `ocpizza`.`pizza_by_shop` ;
USE `ocpizza`;
CREATE  OR REPLACE VIEW `pizza_by_shop` AS

SELECT
	p.name as pizza,
	MIN(s.stock DIV r.number) as max, 
    sh.name as shop
FROM product AS p
INNER JOIN recipe AS r
ON p.id = r.id_product
INNER JOIN ingredient AS i
ON r.id_ingredient = i.id
INNER JOIN stock AS s
ON i.id = s.id
INNER JOIN shop as sh
ON s.id_shop = sh.id
GROUP BY p.name, sh.name;

-- -----------------------------------------------------
-- View `ocpizza`.`sales_by_shop`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ocpizza`.`sales_by_shop`;
DROP VIEW IF EXISTS `ocpizza`.`sales_by_shop` ;
USE `ocpizza`;
CREATE  OR REPLACE VIEW `sales_by_shop` AS

SELECT 
	sh.name,
    SUM(price)
FROM shop as sh
INNER JOIN command as c
ON sh.id = c.id_shop
INNER JOIN command_composition as cc
ON c.id = cc.id_command
GROUP BY sh.name;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
